version: '3.7'
networks:
  default:
    driver: bridge

services:
  app:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    ports:
      - '80:80'
      - '443:443'
      - '22:22' #In order to scan with nmap from :22 port - bypases some WAFs
    networks:
      - default
    depends_on:
      - db
    volumes:
      - '../app:/var/www/app'
      - './conf/nginx:/etc/nginx/sites-available'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'dockerresults:/dockerresults'
      - 'ffuf:/ffuf'
      - 'configs:/configs'
      - 'screenshots:/screenshots'
    extra_hosts:
      - 'localhost.soft:127.0.0.1'
      - 'dev.localhost.soft:127.0.0.1'
    restart: always      
  
  db:
    image: 'mysql:latest'
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    networks:
      - default
    ports:
      - '3336:3306'
    environment:
      #you need to change it at env.example too!!
      MYSQL_ROOT_PASSWORD: SupeRsecRetpasSword
      MYSQL_DATABASE: scaner
    volumes:
      - './database:/var/lib/mysql'
      - './conf/db-scripts:/docker-entrypoint-initdb.d'
    logging:
      driver: none

  cron:
    image: 5631/cron
    restart: always
    networks:
      - default
    depends_on:
      - app
    volumes:
      - './conf/configs/crontab.txt:/etc/cron.d/crontab'
    logging:
      driver: none  
  
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: SupeRsecRetpasSword
      PMA_ABSOLUTE_URI: "https://scaner.app/phpmyadmin/"
      UPLOAD_LIMIT: 3000000000
    networks:
      - default
    logging:
      driver: none
  
  amass:
    image: caffix/amass
    networks:
      - default
    volumes:
      - 'dockerresults:/dockerresults'
      - 'configs:/configs'
  
  aquatone:
    image: 5631/aquatone
    networks:
      - default
    volumes:
      - 'screenshots:/screenshots'
    logging:
      driver: none
  
  wayback:
    image: 5631/wayback
    networks:
      - default
    volumes:
      - 'ffuf:/ffuf'
    logging:
      driver: none
  
  nmap:
    image: instrumentisto/nmap
    networks:
      - default
    volumes:
      - 'dockerresults:/dockerresults'
      - 'configs:/configs'
    logging:
      driver: none

  ffuf:
    image: 5631/ffuf
    networks:
      - default
    volumes:
      - 'dockerresults:/dockerresults'
      - 'configs:/configs'
      - 'ffuf:/ffuf'
    logging:
      driver: none  

  dnsgen:
    image: 5631/dnsgen
    networks:
      - default
    volumes:
      - 'dockerresults:/dockerresults'
      - 'configs:/configs'
      - 'masscan:/masscan'
  
  #masdns
  masscan:
    image: 5631/masscan
    networks:
      - default
    volumes:
      - 'dockerresults:/dockerresults'
      - 'configs:/configs'
      - 'masscan:/masscan'

  fdns:
    image: 5631/fdns
    networks:
      - default
    volumes:
      - 'dockerresults:/dockerresults'
      - 'configs:/configs'
      - 'masscan:/masscan'   
     
volumes:
  dockerresults:
    name: dockerresults
  configs:
    name: configs
  screenshots:
    name: screenshots
  ffuf:
    name: ffuf
  masscan:
    name: masscan  