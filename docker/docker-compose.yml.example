version: '3.7'
networks:
  default:
    driver: bridge

services:
  app:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    ports:
      - '80:80'
      - '443:443'
    networks:
      - default
    depends_on:
      - db
    links:
     - db
    volumes:
      - '../app:/var/www/app'
      - './conf/nginx:/etc/nginx/sites-available'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'dockerresults:/dockerresults'
      - 'ffuf:/ffuf'
      - 'nuclei:/nuclei'
      - 'configs:/configs'
      - 'jsa:/jsa'
      - 'screenshots:/screenshots'
    extra_hosts:
      - 'localhost.soft:127.0.0.1'
      - 'dev.localhost.soft:127.0.0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "2m" 
    restart: always  

  db:
    image: 'mysql:5.7'
    command: --default-authentication-plugin=mysql_native_password --max_allowed_packet=4G --wait_timeout=56000 --net_read_timeout=600 --net_write_timeout=600 --connect_timeout=200 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --skip-character-set-client-handshake
    restart: always
    networks:
      - default
    ports:
      - '3336:3306'
    environment:
      #you need to change it at env.example too!!
      MYSQL_ROOT_PASSWORD: 1
      MYSQL_DATABASE: scaner
    volumes:
      - './conf/db-scripts:/docker-entrypoint-initdb.d'
      - './database:/var/lib/mysql'
    logging:
      driver: "json-file"
      options:
        max-size: "2m" 

    #docker exec -i docker_db_1 sh -c 'exec mysql -uroot -p"1"' < /root/project/scaner2.sql

  cron:
    image: 5631/cron
    restart: always
    networks:
      - default
    depends_on:
      - app
    volumes:
      - './conf/configs/crontab.txt:/etc/cron.d/crontab'
      - '/var/run/docker.sock:/var/run/docker.sock'
  
  phpmyadmin:
    depends_on:
      - db
    links:
     - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: 1
      PMA_ABSOLUTE_URI: "https://scaner.app/phpmyadmin/"
      UPLOAD_LIMIT: 3000000000
    networks:
      - default
    logging:
      driver: "json-file"
      options:
        max-size: "2m" 
  
  amass:
    image: caffix/amass
    networks:
      - default
    volumes:
      - 'dockerresults:/dockerresults'
      - 'configs:/configs'
    logging:
      driver: "json-file"
      options:
        max-size: "2m" 
        
  gau:
    image: sxcurity/gau:latest
    networks:
      - default
    volumes:
      - 'dockerresults:/dockerresults'
    logging:
      driver: none
  
  nmap:
    image: instrumentisto/nmap
    networks:
      - default
    ports:
      - '22:22'
    volumes:
      - 'nmap:/nmap'
      - 'configs:/configs'
    logging:
      driver: "json-file"
      options:
        max-size: "2m" 

  nuclei:
    image: projectdiscovery/nuclei
    networks:
      - default
    volumes:
      - 'nuclei:/nuclei'
      - 'configs:/root/'
    logging:
      driver: "json-file"
      options:
        max-size: "2m" 
  
  httpx:
    image: projectdiscovery/httpx
    networks:
      - default
    volumes:
      - 'ffuf:/ffuf'
      - 'configs:/configs'
    logging:
      driver: "json-file"
      options:
        max-size: "2m"      

  #githound:
  #  image: 5631/githound
  #  networks:
  #    - default
  #  volumes:
  #    - 'dockerresults:/dockerresults'
  #    - 'configs:/configs'    

  #aquatone:
  #  image: 5631/aquatone
  #  networks:
  #    - default
  #  volumes:
  #    - 'screenshots:/screenshots'
  #  logging:
  #    driver: "json-file"
  #    options:
  #      max-size: "2m" 
     
volumes:
  dockerresults:
    name: dockerresults
  configs:
    name: configs
  screenshots:
    name: screenshots
  ffuf:
    name: ffuf 
  jsa:
    name: jsa
  nuclei:
    name: nuclei
  nmap:
    name: nmap









